# Complete Setup Guide for Medical Inventory Management System
# Step-by-Step Instructions for Beginners

===============================================================================
IMPORTANT: This guide assumes you have NEVER coded before. Follow each step carefully.
===============================================================================

## PART 1: INSTALL REQUIRED SOFTWARE

### Step 1: Install Node.js
1. Go to https://nodejs.org/
2. Click the "LTS" (Long Term Support) version - it will be the green button
3. Download the installer for your operating system (Windows/Mac/Linux)
4. Run the installer and follow the installation wizard
5. Keep clicking "Next" and accept all default settings
6. When installation is complete, restart your computer

### Step 2: Verify Node.js Installation
1. On Windows: Press Windows key + R, type "cmd", press Enter
   On Mac: Press Cmd + Space, type "terminal", press Enter
   On Linux: Press Ctrl + Alt + T
2. Type this command and press Enter: node --version
3. You should see something like "v18.17.0" or similar
4. Type this command and press Enter: npm --version
5. You should see something like "9.6.7" or similar
6. If you see version numbers, Node.js is installed correctly

### Step 3: Install Git (Version Control)
1. Go to https://git-scm.com/downloads
2. Download Git for your operating system
3. Run the installer
4. Keep all default settings during installation
5. Click "Next" through all screens and then "Install"

### Step 4: Install a Code Editor (VS Code)
1. Go to https://code.visualstudio.com/
2. Click "Download for [Your Operating System]"
3. Run the installer
4. Keep all default settings
5. When installation is complete, open VS Code

===============================================================================

## PART 2: DOWNLOAD AND SETUP THE PROJECT

### Step 5: Create a Project Folder
1. Create a new folder on your Desktop called "medical-inventory"
2. Open VS Code
3. Click "File" â†’ "Open Folder"
4. Select the "medical-inventory" folder you just created
5. Click "Select Folder" (Windows) or "Open" (Mac)

### Step 6: Open Terminal in VS Code
1. In VS Code, click "Terminal" in the top menu
2. Click "New Terminal"
3. A terminal window will appear at the bottom of VS Code

### Step 7: Copy Project Files
1. Copy ALL the project files from this conversation into your "medical-inventory" folder
2. Make sure you have these main folders and files:
   - backend/ (folder)
   - src/ (folder)
   - package.json (file)
   - All other files shown in the project

===============================================================================

## PART 3: SETUP DATABASE AND DEPENDENCIES

### Step 8: Install All Dependencies and Setup Database
1. In the VS Code terminal, type this command and press Enter:
   npm run setup

2. This will automatically:
   - Install frontend dependencies
   - Install backend dependencies
   - Generate database files
   - Create the database structure
   - Add sample data

3. Wait for it to complete (this may take 2-5 minutes)
4. You should see "âœ… Setup complete!" when it's done

===============================================================================

## PART 4: RUN THE APPLICATION

### Step 9: Start the Application
1. In the VS Code terminal, type this command and press Enter:
   npm run dev

2. Wait for both servers to start (this takes 30-60 seconds)
3. You should see messages like:
   - "Server running on port 5001"
   - "Local: http://localhost:5173"

### Step 10: Open the Application
1. Open your web browser (Chrome, Firefox, Safari, etc.)
2. Go to: http://localhost:5173
3. You should see the medical inventory system login page!

===============================================================================

## PART 5: LOGIN AND TEST THE SYSTEM

### Step 11: Login with Demo Accounts
The system comes with pre-created demo accounts:

**Admin Account:**
- Email: admin@medcenter.com
- Password: admin123

**Staff Account:**
- Email: staff@medcenter.com
- Password: staff123

**Medical Personnel Account:**
- Email: doctor@medcenter.com
- Password: doctor123

### Step 12: Explore the System
1. Login with the admin account to see all features
2. Navigate through different sections:
   - Dashboard: Overview of the system
   - Inventory: Manage medical items
   - Transactions: Track check-outs and check-ins
   - Maintenance: Schedule equipment maintenance
   - Alerts: View low stock alerts
   - Analytics: View reports and charts
   - Users: Manage system users (Admin only)
   - Settings: Configure categories and system settings

### Step 13: Test Creating Items
1. Go to "Inventory" section
2. Click "Add Item" button
3. Fill out the form with test data
4. Save the item
5. You should see it appear in the inventory list

### Step 14: Test Transactions
1. Go to "Transactions" section
2. Click "New Transaction" button
3. Select an item and create a checkout transaction
4. The inventory quantity should automatically update

===============================================================================

## PART 6: UNDERSTANDING THE LOCAL SETUP

### What's Different from Cloud Setup:
âœ… **No Internet Required**: Everything runs on your computer
âœ… **No Storage Limits**: Uses your computer's storage
âœ… **No Monthly Fees**: Completely free to run
âœ… **Fast Performance**: No network delays
âœ… **Complete Privacy**: Your data never leaves your computer

### Database Location:
- Your database file is stored at: `backend/dev.db`
- This is a SQLite database file that contains all your data
- You can backup this file to save your data

### How It Works:
1. **Frontend**: React application running on port 5173
2. **Backend**: Node.js server running on port 5001
3. **Database**: SQLite database file (dev.db)
4. **API**: RESTful API connecting frontend to backend

===============================================================================

## PART 7: DAILY USAGE (After Initial Setup)

### To Start Working:
1. Open VS Code
2. Open your medical-inventory folder
3. Open terminal in VS Code
4. Type: npm run dev
5. Go to http://localhost:5173 in your browser

### To Stop Working:
1. In the terminal, press Ctrl+C
2. Close VS Code
3. Close your browser tabs

### To Resume Later:
1. Just repeat the "To Start Working" steps above

===============================================================================

## PART 8: FEATURES INCLUDED

### Admin Features:
- Dashboard with statistics
- Complete inventory management
- User management (create, edit, delete users)
- Transaction monitoring
- Maintenance scheduling
- System settings and categories
- Advanced analytics and reports

### Staff Features:
- Inventory management
- Transaction processing
- Maintenance scheduling
- Alert management
- Reporting access

### Medical Personnel Features:
- Item checkout/checkin
- View own transactions
- Basic inventory viewing
- Profile management

### General Features:
- Secure authentication with JWT tokens
- Role-based access control
- Real-time inventory updates
- QR code generation for items
- Low stock alerts
- Maintenance tracking
- Comprehensive reporting
- Data export capabilities
- Responsive design (works on mobile)

===============================================================================

## TROUBLESHOOTING COMMON ISSUES

### Issue 1: "npm command not found"
- Solution: Node.js is not installed properly. Repeat Steps 1-2.

### Issue 2: "Port 5173 is already in use"
- Solution: Close other applications using that port, or restart your computer.

### Issue 3: "Database connection error"
- Solution: Make sure you ran "npm run setup" in Step 8.

### Issue 4: Application won't start
- Solution: 
  1. Close the terminal (Ctrl+C)
  2. Delete node_modules folders in both main and backend directories
  3. Run "npm run setup" again
  4. Run "npm run dev"

### Issue 5: Can't see data or getting errors
- Solution: 
  1. Stop the application (Ctrl+C)
  2. Go to backend folder: cd backend
  3. Reset database: npx prisma db push --force-reset
  4. Reseed data: node seed.js
  5. Go back: cd ..
  6. Start again: npm run dev

### Issue 6: Changes not showing
- Solution: Refresh your browser page (F5 or Ctrl+R)

===============================================================================

## IMPORTANT NOTES

### Data Backup:
- Your data is stored in `backend/dev.db`
- Copy this file to backup your data
- Replace this file to restore a backup

### Security:
- This setup is for local use only
- For production use, additional security measures are needed
- Change default passwords in a real environment

### Performance:
- SQLite database is perfect for small to medium datasets
- For very large datasets (100,000+ items), consider PostgreSQL

### Customization:
- You can modify the code to add new features
- The system is built with modern technologies (React, Node.js, Prisma)
- All source code is included and editable

===============================================================================

## GETTING HELP

### If You Need Help:
1. Check the terminal for error messages
2. Make sure all steps were followed exactly
3. Restart the application if something seems broken
4. Check that all files are in the correct folders

### Common Solutions:
- **Restart the application**: Stop with Ctrl+C, then run `npm run dev` again
- **Clear browser cache**: Press Ctrl+Shift+R to hard refresh
- **Reset database**: Run the commands in Issue 5 above
- **Reinstall**: Delete everything and start over from Step 5

===============================================================================

## CONGRATULATIONS! 

Your medical inventory management system is now running locally on your computer! 

ðŸŽ‰ **You now have:**
- A complete medical inventory system
- No cloud dependencies
- No monthly fees
- Complete data privacy
- Professional-grade features

**Next Steps:**
1. Explore all the features
2. Add your real inventory data
3. Create user accounts for your team
4. Customize categories for your needs
5. Start managing your medical inventory efficiently!

**Remember:** This runs entirely on your computer, so your data is completely private and secure. You can use this system without any internet connection once it's set up.

===============================================================================